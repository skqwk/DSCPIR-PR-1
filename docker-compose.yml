services:
  app:
    image: openjdk:17-oracle
    container_name: spring-sandbox
    volumes:
      - ./spring-sandbox.jar:/spring-sandbox.jar
    command: java -jar spring-sandbox.jar
    environment:
      - SERVER_PORT=${SPRING_SERVER_PORT}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_DATA_REDIS_HOST=${REDIS_HOST}
      - SPRING_DATA_REDIS_PORT=${REDIS_PORT}
      - MINIO_SERVER_PORT=${MINIO_SERVER_PORT}
      - MINIO_CONSOLE_PORT=${MINIO_CONSOLE_PORT}
      - MINIO_HOST=${MINIO_HOST}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy


  db:
    image: postgres
    container_name: sandbox_db
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    command: postgres -p ${DATABASE_PORT}
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/1-create_tables.sql:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    container_name: ${MINIO_HOST}
    image: quay.io/minio/minio
    ports:
      - ${MINIO_SERVER_PORT}:${MINIO_SERVER_PORT}
      - ${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}
    command: server --address :"${MINIO_SERVER_PORT}" --console-address :"${MINIO_CONSOLE_PORT}" /data
    volumes:
      - ./storage:/data
    restart: always

  redis:
    container_name: ${REDIS_HOST}
    image: redis:alpine3.16
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/html:/usr/share/nginx/html
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
